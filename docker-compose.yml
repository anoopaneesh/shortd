
services:
  mongodb:
    image: mongo:latest
    networks:
      - app_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
  redis:
    image: redis:latest
    networks:
      - app_network
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app_network
    volumes:
      - ./init_script.sh:/docker-entrypoint-initdb.d/init_script.sh
    command: ["/bin/sh", "-c", "chmod +x /docker-entrypoint-initdb.d/init_script.sh && /docker-entrypoint-initdb.d/init_script.sh"]
  
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    networks:
      - app_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "/bin/kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      retries: 3
      start_period: 10s

  analyticsservice:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    image: analytics-service
    networks:
      - app_network
    depends_on:
      kafka:
        condition: service_healthy
    container_name: analytics-service
    command: npm run start:dev
    env_file: ./analytics-service/.env
    ports:
      - "4000:4000"

  emailservice:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    image: email-service
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - app_network
    container_name: email-service
    command: npm run start:dev
    env_file: ./email-service/.env
    ports:
      - "3003:3003"

  shortdservice:
    build:
      context: ./shortd-service
      dockerfile: Dockerfile
    image: shortd-service
    depends_on:
      # - analyticsservice
      - emailservice
    networks:
      - app_network
    container_name: shortd-service
    command: npm run start:dev
    env_file: ./shortd-service/.env
    ports:
      - "3000:3000"

  ui:
    build:
      context: ./shortd-ui
      dockerfile: Dockerfile
    image: shortd-ui
    depends_on:
      - shortdservice
    container_name: shortd-ui
    command: npm run dev --host
    networks:
      - app_network
    env_file: ./shortd-ui/.env
    ports:
      - "5173:5173"

networks:
  app_network:

  